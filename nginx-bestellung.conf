# Nginx Konfiguration für bestellung.myfire.cloud
# Speichern unter: /etc/nginx/sites-available/bestellung.myfire.cloud

server {
    listen 80;
    server_name bestellung.myfire.cloud;
    
    # HTTP zu HTTPS weiterleiten
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name bestellung.myfire.cloud;
    
    # SSL-Zertifikat (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/bestellung.myfire.cloud/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bestellung.myfire.cloud/privkey.pem;
    
    # SSL-Konfiguration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "origin-when-cross-origin";
    
    # Gzip Komprimierung
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/json 
        application/javascript 
        application/xml+rss 
        application/atom+xml 
        image/svg+xml;
    
    # Client Upload-Größe (für Bilder)
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Reverse Proxy zu Next.js App
    location / {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts für normale Requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer-Konfiguration
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Statische Assets cachen (Next.js _next/static)
    location /_next/static/ {
        proxy_pass http://127.0.0.1:3001;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
    }
    
    # Favicon und Manifest
    location ~* \.(ico|manifest\.json)$ {
        proxy_pass http://127.0.0.1:3001;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # API-Routen (längere Timeouts für OpenAI)
    location /api/ {
        proxy_pass http://127.0.0.1:3001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Längere Timeouts für KI-Anfragen
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Keine Zwischenspeicherung für API
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Health Check Endpoint
    location /health {
        proxy_pass http://127.0.0.1:3001;
        access_log off;
    }
    
    # Robots.txt
    location /robots.txt {
        proxy_pass http://127.0.0.1:3001;
        expires 1d;
    }
    
    # Error Pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Logging
    access_log /var/log/nginx/bestellung.access.log;
    error_log /var/log/nginx/bestellung.error.log;
} 